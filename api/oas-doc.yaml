openapi: 3.0.0
info:
  version: 1.0.0
  title: Customer API
  license:
    name: MIT
servers:
  - url: 'http://localhost:8080/api/v1'
paths:
  /customers:
    get:
      summary: List all customers
      operationId: listCustomers
      tags:
        - customers
      parameters:
        - name: page
          in: query
          description: Return 10 customers from a given starting point (page)
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: An paged array of customers
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-router-controller: customerController
    post:
      summary: Create a customer
      operationId: createCustomer
      tags:
        - customers
      requestBody:
        description: Customer to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Update status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-router-controller: customerController
  '/customers/{customerId}':
    get:
      summary: Info for a specific customer
      operationId: showCustomerById
      tags:
        - customers
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: customer not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-router-controller: customerController
    put:
      description: updates a customer based on its customerId
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          description: ID of customer to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Customer to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: customer updated
        '404':
          description: customer not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-router-controller: customerController
    delete:
      description: deletes a single customer based on the ID supplied
      operationId: deleteCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer to delete
          schema:
            type: integer
      responses:
        '204':
          description: customer deleted
        '404':
          description: customer not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-router-controller: customerController
components:
  schemas:
    Customer:
      required:
        - name
        - address
        - city
        - state
        - country
        - postal
        - active
        - package
        - owner
      properties:
        _id:
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        owner:
          type: string
        postal:
          type: string
        active:
          type: boolean
        package:
          type: string
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
